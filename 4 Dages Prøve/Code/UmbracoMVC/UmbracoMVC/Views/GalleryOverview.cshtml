@using umbraco.MacroEngines
@inherits UmbracoTemplatePage
@{
    Layout = "umbLayout.cshtml";

    // If the editor has not explicitly provided the "Page title" property page 
    // then just show the name of the page otherwise show the provided title
    var pageTitle = string.IsNullOrWhiteSpace(CurrentPage.Title)
        ? CurrentPage.Name
        : CurrentPage.Title;

    // Model.Content is the current page that we're on
    // AncestorsOrSelf is all of the ancestors this page has in the tree
    // (1) means: go up to level 1 and stop looking for more ancestors when you get there
    // First() gets the first ancestor found (the home page, on level 1)
    var homePage = CurrentPage.AncestorsOrSelf(1).First();    
    
    // Find all pages with document type alias umbNewsOverview
    // We do that using the plural, umbNewsOverviews (note the extra "s" in the end)
    // Then take the first one, as we know there will only be on news overview page
    var GallerOverview = homePage.GalleryOverview.First();

    // Similar to above: find all pages with document type umbNewsItem under the news overview page
    // Then order them, first by publishDate (a property the editor can explicitly set on the news item)
    // and then by createDate, which is set by Umbraco automatically when a page gets created.
    var GalleryItems = GallerOverview.GalleryItem.OrderBy("publishDate desc, createDate desc");

}
<!-- Main -->
<div class="collumn-2-layout">
    <div class="header">
    
        @{ Html.RenderPartial("MiniHero"); }
    </div>
    <section class="darkgrey">
        <div class="row">
            <div class="large-12 columns">
                <header>
                    <h1>@pageTitle</h1>
                </header>
                <div class="marsonycontainer">
                
                 @foreach (var item in GalleryItems)
                {

                    // If the editor has not explicitly provided the "Page title" property page 
                    // then just show the name of the page otherwise show the provided title
                    var title = string.IsNullOrWhiteSpace(item.Title) 
                        ? item.Name 
                        : item.Title;


                    // If the editor has not explicitly set the publishDate property then show the create date
                    var dateTime = item.PublishDate == default(DateTime) 
                        ? item.CreateDate 
                        : item.PublishDate;

                    string someText = library.StripHtml(item.BodyText.ToString());
                    
                    <div class="item">
                        @if (string.IsNullOrWhiteSpace(item.images.ToString()) == false)
                                {
                                    string[] imageslist = item.images.ToString().Split(',');
                                    <a class="fancybox" href="@Umbraco.Media(int.Parse(imageslist[0])).umbracoFile"><img src="@Umbraco.Media(int.Parse(imageslist[0])).umbracoFile"  id="item-@item.Id" /></a>
                                }
                    </div>
                    
                }
                </div>
            </div>
        </div>
    </section>
</div>

@section Scripts {
    <script>
        var $container = $('.marsonycontainer');
    $container.imagesLoaded(function () {
        $container.masonry({
            itemSelector: '.item',
            columnWidth: 240,
            isAnimated: true,
            animationOptions: {
                duration: 500,
                easing: 'linear',
                queue: false
            }
        });
    });
    $(document).ready(function () {
        $(".fancybox").fancybox();
    });
    </script>
}